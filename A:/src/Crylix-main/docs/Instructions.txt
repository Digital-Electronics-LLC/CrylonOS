MNEMONICS	OPERANDS	OPCODE				MEANING
load	        reg, addr      0x000001      load data at location [addr] to register [reg]
loadi           reg, data      0x000002      load immediate data [data] to register [reg]
store           reg, addr      0x000003      store data in register [reg] to location [addr]
add             regA, regB     0x000004      add register [regA] to register [regB]; result in regA
sub             regA, regB     0x000005      subtract register [regA] to register [regB]; result in regA
comp            regA, regB     0x000006      compare register [regA] to register [regB];sets A or E flag
and             regA, regB     0x000007      logical AND registers [regA] and [regB]
or              regA, regB     0x000008      logical OR registers [regA] and [regB]
xor             regA, regB     0x000009      logical XOR registers [regA] and [regB]
shift           dirc, reg      0x00000a      shift register [reg] in the direction [direc]
copy            regA, regB     0x00000b      copy data from register [regA] tp register [regB]
jmpr            reg            0x00000c      jump to address stored in register [reg]
jump            addr           0x00000d      jump to the address [addr]
jmpif           addr,CAEZ      0x00000e      jump to the address if the flag [CAEZ] is set
inc             reg            0x00000f      increase the register [reg] by 1
dec             reg            0x000010      decrease the register [reg] by 1
push            reg            0x000011      push the data contained in the register [reg] into stack
pop             reg            0x000012      pop the data from stack into the register [reg]
call            func           0x000013      call the subroutine [func]
ret             N/A            0x000014      return from subroutine
clf             N/A            0x000015      clear all flags(CAEZ)
halt            N/A            0x000016      halt the clock, thus ending the program
data            data           0x000017      the address this instruction is in contains the data [data]; hex code unused
outa            reg            0x000018      outputs the device address from the register [reg]
ind             reg, reg       0x000019      inputs data from device address in [reg] to register [reg]
outd            addr, reg      0x00001a      outputs data to device address in [reg] from register [reg]
unused          N/A            0x00001b      unused
unused          N/A            0x00001c      unused
nop             N/A            0x00001d      no operation
lodsb           reg            0x00001e      load single byte from string into register [reg]
